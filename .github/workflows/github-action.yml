name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present

      - name: Build Docker Image
        id: build_image
        run: |
          CONTAINER_NAME="projet-devops-${{ github.sha }}"
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/projet-devops:latest .
          echo "::set-output name=CONTAINER_NAME::$CONTAINER_NAME"

      - name: Tag Docker Image
        run: docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/projet-devops:latest ${{ secrets.DOCKER_HUB_USERNAME }}/projet-devops:${{ github.sha }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/projet-devops:${{ github.sha }}

      - name: Set Container Name Output
        run: echo "::set-output name=CONTAINER_NAME::${{ steps.build_image.outputs.CONTAINER_NAME }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        run: ./deploy.sh ${{ needs.build.outputs.CONTAINER_NAME }}
